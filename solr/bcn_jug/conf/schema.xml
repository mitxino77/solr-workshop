<?xml version="1.0" encoding="UTF-8" ?>
<schema name="book" version="1.5">
	<fields>
		<field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
		<field name="title" type="string" indexed="true" stored="true" />
		<field name="lang" type="string" indexed="true" stored="true" />
		<field name="price" type="float" indexed="true" stored="true" />
		<field name="popularity" type="int" indexed="true" stored="true" default="2" />
		
		<!-- 
		<field name="STRING_FIELD" type="string" indexed="true" stored="true" required="true" multiValued="false" />
		<field name="FLOAT_FIELD" type="float" indexed="true" stored="true" />
		<field name="INT_FIELD" type="int" indexed="true" stored="true" default="2" />
		<field name="BOOLEAN_FIELD" type="boolean" indexed="true" stored="true" />
		<field name="LOCATION_FIELD" type="location" indexed="true" stored="true" />
		<field name="DATE_FIELD" type="date" indexed="true" stored="true" />
		<field name="ANALYZED_TEXT_FIELD" type="text_es" indexed="true" stored="false" multiValued="true" />
		<field name="LONG_FIELD" type="long" indexed="true" stored="true"/>
		 -->
		 <field name="text" type="text_es" indexed="true" stored="false" multiValued="true"/>
		 
		 <field name="_version_" type="long" indexed="true" stored="true"/>
	</fields>

	<uniqueKey>id</uniqueKey>

	<copyField source="title" dest="text" />
	<!-- 
	<copyField source="SOURCE_FIELD" dest="DEST_FIELD" />
	 -->
	<types>

		<!-- The StrField type is not analyzed, but indexed/stored verbatim. It 
			supports doc values but in that case the field needs to be single-valued 
			and either required or have a default value. -->
		<fieldType name="string" class="solr.StrField" sortMissingLast="true" />

		<!-- boolean type: "true" or "false" -->
		<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" />

		<!-- Default numeric field types. For faster range queries, consider the 
			tint/tfloat/tlong/tdouble types. These fields support doc values, but they 
			require the field to be single-valued and either be required or have a default 
			value. -->
		<fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0" />
		<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0" />
		<fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0" />
		<fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0" />

		<fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0" />
		
		<!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
    	<fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>

		<!-- A text field that only splits on whitespace for exact matching of 
			words -->
		<fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
			</analyzer>
		</fieldType>

		<!-- Spanish -->
		<fieldType name="text_es" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_es.txt" format="snowball" enablePositionIncrements="true" />
				<filter class="solr.SpanishLightStemFilterFactory" />
				<!-- more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="Spanish"/> -->
			</analyzer>
		</fieldType>


		<!-- A text field with defaults appropriate for English: it tokenizes with 
			StandardTokenizer, removes English stop words (lang/stopwords_en.txt), down 
			cases, protects words from protwords.txt, and finally applies Porter's stemming. 
			The query time analyzer also applies synonyms from synonyms.txt. -->
		<fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
				<!-- Optionally you may want to use this less aggressive stemmer instead 
					of PorterStemFilterFactory: <filter class="solr.EnglishMinimalStemFilterFactory"/> -->
				<filter class="solr.PorterStemFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
				<!-- Optionally you may want to use this less aggressive stemmer instead 
					of PorterStemFilterFactory: <filter class="solr.EnglishMinimalStemFilterFactory"/> -->
				<filter class="solr.PorterStemFilterFactory" />
			</analyzer>
		</fieldType>

	</types>
</schema>
